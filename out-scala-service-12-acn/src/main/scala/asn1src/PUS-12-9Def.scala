/*
Code automatically generated by asn1scc tool
*/
package asn1src

import asn1scala._
import stainless.lang._
import stainless.annotation._
import stainless.collection._
import stainless.proof._
import StaticChecks._

/*-- TTM_12_9_ParameterMonitoringDefinitionReport --------------------------------------------*/

case class TTM_12_9_ParameterMonitoringDefinitionReport (
) {

    def size(offset: Long): Long = {
        require((0L <= offset) && (offset <= 9223372036854775807L))
        0L
    }.ensuring { (res: Long) => 
        res == 0L
    }

    @ghost @opaque @inlineOnce
    def sizeLemmaAnyOffset(offset: Long, otherOffset: Long): Unit = {
        require((0L <= offset) && (offset <= 9223372036854775807L))
        require((0L <= otherOffset) && (otherOffset <= 9223372036854775807L))
        ()
    }.ensuring { (res: Unit) => 
        this.size(offset) == this.size(otherOffset)
    }

    @ghost @opaque @inlineOnce
    def sizeLemmaNextByte(offset: Long, otherOffset: Long): Unit = {
        require((0L <= offset) && (offset <= 9223372036854775807L))
        require((0L <= otherOffset) && (otherOffset <= 9223372036854775807L))
        require((offset % 8L) == (otherOffset % 8L))
        ()
    }.ensuring { (res: Unit) => 
        this.size(offset) == this.size(otherOffset)
    }

    @ghost @opaque @inlineOnce
    def sizeLemmaNextWord(offset: Long, otherOffset: Long): Unit = {
        require((0L <= offset) && (offset <= 9223372036854775807L))
        require((0L <= otherOffset) && (otherOffset <= 9223372036854775807L))
        require((offset % 16L) == (otherOffset % 16L))
        ()
    }.ensuring { (res: Unit) => 
        this.size(offset) == this.size(otherOffset)
    }

    @ghost @opaque @inlineOnce
    def sizeLemmaNextDWord(offset: Long, otherOffset: Long): Unit = {
        require((0L <= offset) && (offset <= 9223372036854775807L))
        require((0L <= otherOffset) && (otherOffset <= 9223372036854775807L))
        require((offset % 32L) == (otherOffset % 32L))
        ()
    }.ensuring { (res: Unit) => 
        this.size(offset) == this.size(otherOffset)
    }
}


@inline @cCode.inline val ERR_TM_12_9_PARAMETERMONITORINGDEFINITIONREPORT: Int = 2817 /* */

 

@inline @cCode.inline val TTM_12_9_ParameterMonitoringDefinitionReport_REQUIRED_BYTES_FOR_ACN_ENCODING = 0
@inline @cCode.inline val TTM_12_9_ParameterMonitoringDefinitionReport_REQUIRED_BITS_FOR_ACN_ENCODING = 0

@inline @cCode.inline val ERR_ACN_DECODE_TM_12_9_PARAMETERMONITORINGDEFINITIONREPORT: Int = 2821 /*  */


