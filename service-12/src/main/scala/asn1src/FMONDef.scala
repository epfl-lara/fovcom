/*
Code automatically generated by asn1scc tool
*/
package asn1src

import asn1scala._
import stainless.lang._
import stainless.annotation._
import stainless.collection._
import stainless.proof._
import StaticChecks._

sealed trait TFMON_ID:
    def i: Int
object TFMON_ID:
    case object Tfunction0 extends TFMON_ID:
        override def i: Int = 0

// please use the following macros to avoid breaking code.
// type Tfunction0 = TFMON_ID.function0

@inline @cCode.inline val ERR_FMON_ID: Int = 36 /*function0 */

 

@inline @cCode.inline val ERR_ACN_ENCODE_FMON_ID: Int = 39 /*  */
@inline @cCode.inline val TFMON_ID_REQUIRED_BYTES_FOR_ACN_ENCODING = 4
@inline @cCode.inline val TFMON_ID_REQUIRED_BITS_FOR_ACN_ENCODING = 32

@inline @cCode.inline val ERR_ACN_DECODE_FMON_ID: Int = 40 /*  */
sealed trait TFMON_ProtectionStatus:
    def i: Int
object TFMON_ProtectionStatus:
    case object Tunprotected extends TFMON_ProtectionStatus:
        override def i: Int = 0
    case object TFMON_ProtectionStatus_protected extends TFMON_ProtectionStatus:
        override def i: Int = 1

// please use the following macros to avoid breaking code.
// type Tunprotected = TFMON_ProtectionStatus.unprotected
// type TFMON_ProtectionStatus_protected = TFMON_ProtectionStatus.protected

@inline @cCode.inline val ERR_FMON_PROTECTIONSTATUS: Int = 41 /*unprotected | protected */

 

@inline @cCode.inline val ERR_ACN_ENCODE_FMON_PROTECTIONSTATUS: Int = 44 /*  */
@inline @cCode.inline val TFMON_ProtectionStatus_REQUIRED_BYTES_FOR_ACN_ENCODING = 1
@inline @cCode.inline val TFMON_ProtectionStatus_REQUIRED_BITS_FOR_ACN_ENCODING = 1

@inline @cCode.inline val ERR_ACN_DECODE_FMON_PROTECTIONSTATUS: Int = 45 /*  */
sealed trait TFMON_Status:
    def i: Int
object TFMON_Status:
    case object TFMON_Status_disabled extends TFMON_Status:
        override def i: Int = 0
    case object TFMON_Status_enabled extends TFMON_Status:
        override def i: Int = 1

// please use the following macros to avoid breaking code.
// type TFMON_Status_disabled = TFMON_Status.disabled
// type TFMON_Status_enabled = TFMON_Status.enabled

@inline @cCode.inline val ERR_FMON_STATUS: Int = 46 /*disabled | enabled */

 

@inline @cCode.inline val ERR_ACN_ENCODE_FMON_STATUS: Int = 49 /*  */
@inline @cCode.inline val TFMON_Status_REQUIRED_BYTES_FOR_ACN_ENCODING = 1
@inline @cCode.inline val TFMON_Status_REQUIRED_BITS_FOR_ACN_ENCODING = 1

@inline @cCode.inline val ERR_ACN_DECODE_FMON_STATUS: Int = 50 /*  */
sealed trait TFMON_CheckingStatus:
    def i: Int
object TFMON_CheckingStatus:
    case object TFMON_CheckingStatus_unchecked extends TFMON_CheckingStatus:
        override def i: Int = 0
    case object Trunning extends TFMON_CheckingStatus:
        override def i: Int = 1
    case object TFMON_CheckingStatus_invalid extends TFMON_CheckingStatus:
        override def i: Int = 2
    case object Tfailed extends TFMON_CheckingStatus:
        override def i: Int = 3

// please use the following macros to avoid breaking code.
// type TFMON_CheckingStatus_unchecked = TFMON_CheckingStatus.unchecked
// type Trunning = TFMON_CheckingStatus.running
// type TFMON_CheckingStatus_invalid = TFMON_CheckingStatus.invalid
// type Tfailed = TFMON_CheckingStatus.failed

@inline @cCode.inline val ERR_FMON_CHECKINGSTATUS: Int = 51 /*unchecked | running | invalid | failed */

 

@inline @cCode.inline val ERR_ACN_ENCODE_FMON_CHECKINGSTATUS: Int = 54 /*  */
@inline @cCode.inline val TFMON_CheckingStatus_REQUIRED_BYTES_FOR_ACN_ENCODING = 1
@inline @cCode.inline val TFMON_CheckingStatus_REQUIRED_BITS_FOR_ACN_ENCODING = 2

@inline @cCode.inline val ERR_ACN_DECODE_FMON_CHECKINGSTATUS: Int = 55 /*  */


