/*
Code automatically generated by asn1scc tool
*/
package asn1src

import asn1scala._
import stainless.lang.{ghost => ghostExpr, _}
import stainless.annotation._
import stainless.collection._
import stainless.proof._
import StaticChecks._


def TOBCPArgumentValues_arg0_IsConstraintValid(pVal: TOBCPArgumentValues_arg0): Either[ErrorCode, Int] =
{
    var ret: Either[ErrorCode, Int] = Right(0)
    ret = (pVal <= ULong.fromRaw(255L)) match
        case true =>
            Right(0)
        case false =>
            Left(45)
    ret
}

def TOBCPArgumentValues_IsConstraintValid(pVal: TOBCPArgumentValues): Either[ErrorCode, Int] =
{
    var ret: Either[ErrorCode, Int] = Right(0)
    pVal match
        case TOBCPArgumentValues.arg0_PRESENT(arg0) =>
            ret = TOBCPArgumentValues_arg0_IsConstraintValid(arg0)
    ret
}

def TOBCPArgumentValues_arg0_Initialize(): TOBCPArgumentValues_arg0 = ULong.fromRaw(0L)
def TOBCPArgumentValues_Initialize(): TOBCPArgumentValues = TOBCPArgumentValues.arg0_PRESENT(ULong.fromRaw(0L))